<% content_for :css do %>
<style>
.page-content {
  min-height: 50vh !important;
  height: 50vh !important;
}

/* @import url(https://fonts.googleapis.com/css?family=Fredoka+One); */
/* 
 body {
	 background-color: black;
} */
 @keyframes wave {
	 from {
		 transform: translateY(0);
		 color: white;
	}
	 to {
		 transform: translateY(-90px);
	}
}
 .wavetext {
	 margin-top: 10em;
	 text-align: center;
}
 .wavetext span {
	 display: inline-block;
	 /* font-family: "Fredoka One", sans-serif; */
	 font-size: 88px;
	 animation-duration: 0.3s;
	 animation-name: wave;
	 animation-iteration-count: infinite;
	 animation-direction: alternate;
}
 .wavetext :nth-child( 40n + 0) {
	 animation-delay: -0.6s;
	 color: rgba(100, 10, 100, 1);
}
 .wavetext :nth-child( 40n + 1) {
	 animation-delay: -0.585s;
	 color: rgba(120, 10, 140, 1);
}
 .wavetext :nth-child( 40n + 2) {
	 animation-delay: -0.57s;
	 color: rgba(140, 10, 125, 1);
}
 .wavetext :nth-child( 40n + 3) {
	 animation-delay: -0.555s;
	 color: rgba(160, 10, 110, 1);
}
 .wavetext :nth-child( 40n + 4) {
	 animation-delay: -0.54s;
	 color: rgba(180, 10, 150, 1);
}
 .wavetext :nth-child( 40n + 5) {
	 animation-delay: -0.525s;
	 color: rgba(200, 10, 135, 1);
}
 .wavetext :nth-child( 40n + 6) {
	 animation-delay: -0.51s;
	 color: rgba(220, 10, 120, 1);
}
 .wavetext :nth-child( 40n + 7) {
	 animation-delay: -0.495s;
	 color: rgba(240, 10, 105, 1);
}
 .wavetext :nth-child( 40n + 8) {
	 animation-delay: -0.48s;
	 color: rgba(105, 10, 145, 1);
}
 .wavetext :nth-child( 40n + 9) {
	 animation-delay: -0.465s;
	 color: rgba(125, 10, 130, 1);
}
 .wavetext :nth-child( 40n + 10) {
	 animation-delay: -0.45s;
	 color: rgba(145, 10, 115, 1);
}
 .wavetext :nth-child( 40n + 11) {
	 animation-delay: -0.435s;
	 color: rgba(165, 10, 100, 1);
}
 .wavetext :nth-child( 40n + 12) {
	 animation-delay: -0.42s;
	 color: rgba(185, 10, 140, 1);
}
 .wavetext :nth-child( 40n + 13) {
	 animation-delay: -0.405s;
	 color: rgba(205, 10, 125, 1);
}
 .wavetext :nth-child( 40n + 14) {
	 animation-delay: -0.39s;
	 color: rgba(225, 10, 110, 1);
}
 .wavetext :nth-child( 40n + 15) {
	 animation-delay: -0.375s;
	 color: rgba(245, 10, 150, 1);
}
 .wavetext :nth-child( 40n + 16) {
	 animation-delay: -0.36s;
	 color: rgba(110, 10, 135, 1);
}
 .wavetext :nth-child( 40n + 17) {
	 animation-delay: -0.345s;
	 color: rgba(130, 10, 120, 1);
}
 .wavetext :nth-child( 40n + 18) {
	 animation-delay: -0.33s;
	 color: rgba(150, 10, 105, 1);
}
 .wavetext :nth-child( 40n + 19) {
	 animation-delay: -0.315s;
	 color: rgba(170, 10, 145, 1);
}
 .wavetext :nth-child( 40n + 20) {
	 animation-delay: -0.3s;
	 color: rgba(190, 10, 130, 1);
}
 .wavetext :nth-child( 40n + 21) {
	 animation-delay: -0.285s;
	 color: rgba(210, 10, 115, 1);
}
 .wavetext :nth-child( 40n + 22) {
	 animation-delay: -0.27s;
	 color: rgba(230, 10, 100, 1);
}
 .wavetext :nth-child( 40n + 23) {
	 animation-delay: -0.255s;
	 color: rgba(250, 10, 140, 1);
}
 .wavetext :nth-child( 40n + 24) {
	 animation-delay: -0.24s;
	 color: rgba(115, 10, 125, 1);
}
 .wavetext :nth-child( 40n + 25) {
	 animation-delay: -0.225s;
	 color: rgba(135, 10, 110, 1);
}
 .wavetext :nth-child( 40n + 26) {
	 animation-delay: -0.21s;
	 color: rgba(155, 10, 150, 1);
}
 .wavetext :nth-child( 40n + 27) {
	 animation-delay: -0.195s;
	 color: rgba(175, 10, 135, 1);
}
 .wavetext :nth-child( 40n + 28) {
	 animation-delay: -0.18s;
	 color: rgba(195, 10, 120, 1);
}
 .wavetext :nth-child( 40n + 29) {
	 animation-delay: -0.165s;
	 color: rgba(215, 10, 105, 1);
}
 .wavetext :nth-child( 40n + 30) {
	 animation-delay: -0.15s;
	 color: rgba(235, 10, 145, 1);
}
 .wavetext :nth-child( 40n + 31) {
	 animation-delay: -0.135s;
	 color: rgba(100, 10, 130, 1);
}
 .wavetext :nth-child( 40n + 32) {
	 animation-delay: -0.12s;
	 color: rgba(120, 10, 115, 1);
}
 .wavetext :nth-child( 40n + 33) {
	 animation-delay: -0.105s;
	 color: rgba(140, 10, 100, 1);
}
 .wavetext :nth-child( 40n + 34) {
	 animation-delay: -0.09s;
	 color: rgba(160, 10, 140, 1);
}
 .wavetext :nth-child( 40n + 35) {
	 animation-delay: -0.075s;
	 color: rgba(180, 10, 125, 1);
}
 .wavetext :nth-child( 40n + 36) {
	 animation-delay: -0.06s;
	 color: rgba(200, 10, 110, 1);
}
 .wavetext :nth-child( 40n + 37) {
	 animation-delay: -0.045s;
	 color: rgba(220, 10, 150, 1);
}
 .wavetext :nth-child( 40n + 38) {
	 animation-delay: -0.03s;
	 color: rgba(240, 10, 135, 1);
}
 .wavetext :nth-child( 40n + 39) {
	 animation-delay: -0.015s;
	 color: rgba(105, 10, 120, 1);
}
 
</style>
<% end %>
<% content_for :body do %>
<div id="raffle-container" class="content-area">
  <div class="row">
    <!-- Home Subpage -->
    <div class="col-xl-12">
    <div id="winner-header" style="display: none;">The Lucky Winner Is</div>
    <div id="participants-output"></div>
    </div>
    <!-- End of Home Subpage -->
  </div>
</div>

<!-- Sounds -->
<audio id="counting_numbers">
  <source src="/sounds/counting_numbers.mp3" type="audio/mp3" />
</audio>
<audio id="cheering_kids">
  <source src="/sounds/cheering_kids.mp3" type="audio/mp3" />
</audio>


<% end %>
<% content_for :js do %>
<script text="type/javascript">
  var output, started, duration, desired;
  var search_winner_enabled = false;
  var search_winner_url = "<%= search_winner_projects_raffles_url %>";
  var counting_numbers = $('audio[id^="counting_numbers"]')[0]; 
  var cheering_kids = $('audio[id^="cheering_kids"]')[0];

  // Constants
  duration = 5000;
  desired = '50';

  // Initial setup
  output = $('#participants-output');
  // started = new Date().getTime();

  $('#btn-search-lucky-winner').on('click', function(){
		$(this).fadeOut();
    $('#winner-header').hide();
    output.text('').removeClass('wavetext');
    duration = 5000;
    started = new Date().getTime();
    search_winner();
  });

  // Animate!
  function search_winner(){
    animationTimer = setInterval(function() {
        // If the value is what we want, stop animating
        // or if the duration has been exceeded, stop animating
        if (new Date().getTime() - started > duration) {
            clearInterval(animationTimer);
         
            $.get(search_winner_url, function(data, status){
              // output.addClass('wavetext').text(data['winner']);
              if(!data['end_of_draw']){
                $('#winner-header').show();
              }
             
              output.text('');
              output.addClass('wavetext');
              for(var i in data['winner']) { 
                if(data['winner'][i] === " ") {
                  $(".wavetext").append( $("<span>").html("&nbsp;") ); 
                } else {  
                  $(".wavetext").append( $("<span>").text(data['winner'][i]) ); 
                }
              }
              
              counting_numbers.pause();
              cheering_kids.play();
							$("#btn-search-lucky-winner").fadeIn();
            });
            
        } else {
            // console.log('animating');
            // Generate a random string to use for the next animation step
            counting_numbers.play(); 
            output.text(
                ''+
                Math.floor(Math.random() * 10)+
                Math.floor(Math.random() * 10)
            );
        }
    }, 100);
  }
  
</script>
<% end %>